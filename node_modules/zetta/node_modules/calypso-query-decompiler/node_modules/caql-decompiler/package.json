{
  "name": "caql-decompiler",
  "version": "0.6.0",
  "description": "Decompiles a CaQL AST into a plaintext query.",
  "main": "decompiler.js",
  "dependencies": {
    "caql": "~0.1.0"
  },
  "devDependencies": {},
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kevinswiber/caql-decompiler.git"
  },
  "keywords": [
    "caql",
    "decompiler",
    "ast"
  ],
  "author": {
    "name": "Kevin Swiber",
    "email": "kswiber@gmail.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kevinswiber/caql-decompiler/issues"
  },
  "homepage": "https://github.com/kevinswiber/caql-decompiler",
  "readme": "# caql-decompiler\n\nDecompiles a [caql](https://github.com/kevinswiber/caql) AST into a plaintext query.\n\n## Install\n\n`npm install caql-decompiler`\n\n## Example\n\n```js\nvar Parser = require('caql');\nvar CaqlDecompiler = require('caql-decompiler');\nvar decompiler = new CaqlDecompiler();\n\nvar query =   'select name, founded_year, total_money_raised as worth '\n            + 'where founded_year >= 1999 and name not like \"%air%\" '\n            + 'order by founded_year desc, name';\n\nvar ast = Parser.parse(query);\n\nvar ql = decompiler.decompile(ast);\n\nconsole.log(ql);\n\n// Output:\n//\n// select name, founded_year, total_money_raised as worth where \n// ( founded_year >= 1999 and name not like \"%air%\" ) order by founded_year desc, name asc\n \n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "caql-decompiler@0.6.0",
  "_shasum": "eb39978405e2d9b9249eaf10fb7d378f259f1dff",
  "_from": "caql-decompiler@~0.6.0",
  "_resolved": "https://registry.npmjs.org/caql-decompiler/-/caql-decompiler-0.6.0.tgz"
}
